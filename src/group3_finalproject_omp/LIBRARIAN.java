/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package group3_finalproject_omp;
import database.BookDatabase;
import database.DisplayCountedDashboard;
import database.IssueBookDatabase;
import model.BookModel;
import model.IssueBookModel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author yuuki
 */
public class LIBRARIAN extends javax.swing.JFrame {

    int numberOfAvailableBooks;
    int numberOfIssuedBooks;
    int numberOfReturnedBooks;
    DefaultTableModel bookListTableModel;
    DefaultTableModel bookModel;
    DefaultTableModel issueModel;
    DefaultTableModel model5;
    List<BookModel> bookModelList;
    List<BookModel> bookList;
    List<IssueBookModel> issueBookModelList;
    List<IssueBookModel> returnBookModelList;

    /**
     * Creates new form LIBRARIAN_DASHBOARD
     */
    public LIBRARIAN() {
        initComponents();
        
        setIconImage(new ImageIcon(getClass().getResource("/image_dashboard/omp(blue).png")).getImage());
        
        jP_LIB_DASHBOARD.setVisible(true);
        jP_LIB_ADDBOOK.setVisible(false);
        jP_LIB_ISSUEBOOK.setVisible(false);
        jP_LIB_RETURNBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(false);

        InitializeDashboard();


        String [] columns1 = {"No", "Title", "Author", "Genre", "ISBN", "Status"};
        bookListTableModel = new DefaultTableModel(columns1, 0);
        jTable2.setModel(bookListTableModel);
        LoadBookList();

        String [] columns2 = {"Book ID", "Title", "Author", "Genre", "Date Published", "ISBN", "Status"};
        bookModel = new DefaultTableModel(columns2, 0);
        LIB_ADD_TABLE.setModel(bookModel);

        LoadBook();

        String [] columns3 = {"Issue ID", "Issue Date", "Return Date", "Name", "ISBN", "Phone Number", "Email Address", "Status"};
        issueModel = new DefaultTableModel(columns3, 0);
        LIB_ISSUE_TABLE.setModel(issueModel);

        LoadIssueBook();


        String [] columns4 = {"Issue ID", "Issue Date", "Return Date", "Name", "ISBN", "Phone Number", "Status"};
        model5 = new DefaultTableModel(columns4, 0);
        LIB_RETURN_TABLE.setModel(model5);

        LoadReturnBook();

    }

    void InitializeDashboard(){
        numberOfAvailableBooks = DisplayCountedDashboard.getInstance().getNumberOfBooks();
        numberOfIssuedBooks = DisplayCountedDashboard.getInstance().getNumberOfIssuedBooks();
        numberOfReturnedBooks = DisplayCountedDashboard.getInstance().getNumberOfReturnedBooks();

        LIB_NUMBER_AVAIL_BOOK.setText(String.valueOf(numberOfAvailableBooks));
        LIB_NUMBER_ISSUED_BOOK.setText(String.valueOf(numberOfIssuedBooks));
        LIB_NUMBER_RETURNED_BOOK.setText(String.valueOf(numberOfReturnedBooks));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LIB_NOTIF = new javax.swing.JLabel();
        LIB_SETTING = new javax.swing.JLabel();
        jP_LIB_DASHBOARD = new javax.swing.JPanel();
        LIB_NUMBER_RETURNED_BOOK = new javax.swing.JLabel();
        LIB_NUMBER_ISSUED_BOOK = new javax.swing.JLabel();
        LIB_NUMBER_AVAIL_BOOK = new javax.swing.JLabel();
        LIB_DATE_TIME = new javax.swing.JLabel();
        LIB_BOOKS = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        LIB_BACKGROUND_LAYOUT = new javax.swing.JLabel();
        jP_LIB_ADDBOOK = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LIB_ADD_TABLE = new javax.swing.JTable();
        LIB_BOOK_TITLE = new javax.swing.JTextField();
        LIB_BOOK_AUTHOR = new javax.swing.JTextField();
        LIB_BOOK_GENRE = new javax.swing.JTextField();
        LIB_DATE_PUB = new javax.swing.JTextField();
        LIB_ISBN = new javax.swing.JTextField();
        AB_ADD = new javax.swing.JButton();
        AB_UPDATE = new javax.swing.JButton();
        AB_CLEAR = new javax.swing.JButton();
        AB_DELETE = new javax.swing.JButton();
        ADDBOOK_MANAGE = new javax.swing.JLabel();
        LIB_ADD_BOOK_LAYOUT = new javax.swing.JLabel();
        jP_LIB_ISSUEBOOK = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        LIB_ISSUE_TABLE = new javax.swing.JTable();
        LIB_IB_ISBN = new javax.swing.JTextField();
        LIB_IB_PHONENUM = new javax.swing.JTextField();
        LIB_IB_NAME = new javax.swing.JTextField();
        LIB_EMAILADD = new javax.swing.JTextField();
        LIB_ISSUEID = new javax.swing.JTextField();
        LIB_IB_ISSUEDATE = new javax.swing.JTextField();
        LIB_IB_RETURN = new javax.swing.JTextField();
        LIB_IB_COMBO = new javax.swing.JComboBox<>();
        LIB_IB_ADD = new javax.swing.JButton();
        LIB_IB_UPDATE = new javax.swing.JButton();
        LIB_IB_CLEAR = new javax.swing.JButton();
        LIB_IB_DELETE = new javax.swing.JButton();
        ISSUEBOOK_MANAGE = new javax.swing.JLabel();
        LIB_IB_LAYOUT = new javax.swing.JLabel();
        jP_LIB_RETURNBOOK = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        LIB_RETURN_TABLE = new javax.swing.JTable();
        LIB_RB_ISSUEID = new javax.swing.JTextField();
        LIB_RB_RETURNDATE = new javax.swing.JTextField();
        LIB_RB_ISSUEDATAE = new javax.swing.JTextField();
        LIB_RB_ISBN = new javax.swing.JTextField();
        LIB_RB_NAME = new javax.swing.JTextField();
        LIB_RB_PHONENUM = new javax.swing.JTextField();
        LIB_RB_BOOKSTATUS = new javax.swing.JTextField();
        LIB_RB_RETURN = new javax.swing.JButton();
        LIB_RB_CLEAR = new javax.swing.JButton();
        RETURNBOOK_MANAGE = new javax.swing.JLabel();
        LIB_RB_LAYOUT = new javax.swing.JLabel();
        jP_LIB_ACCOUNT = new javax.swing.JPanel();
        LIB_EDIT_BUTTON = new javax.swing.JLabel();
        LIB_ACCOUNT_LAYOUT = new javax.swing.JLabel();
        LIB_DASHBOARD = new javax.swing.JLabel();
        LIB_ADDBOOK = new javax.swing.JLabel();
        LIB_ISSUEBOOK = new javax.swing.JLabel();
        LIB_RETURNBOOK = new javax.swing.JLabel();
        LIB_ACCOUNT = new javax.swing.JLabel();
        LIB_LOGOUT = new javax.swing.JLabel();
        LIB_DIVIDER = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Librarian | One More Page");
        setBackground(new java.awt.Color(255, 254, 252));
        setLocation(new java.awt.Point(300, 150));
        setMinimumSize(new java.awt.Dimension(1190, 675));
        setResizable(false);
        setSize(new java.awt.Dimension(1190, 675));

        jPanel1.setBackground(new java.awt.Color(255, 254, 252));
        jPanel1.setMaximumSize(new java.awt.Dimension(1190, 675));
        jPanel1.setMinimumSize(new java.awt.Dimension(1190, 675));
        jPanel1.setPreferredSize(new java.awt.Dimension(1190, 675));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LIB_NOTIF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ADM/ADMIN_NOTIF.png"))); // NOI18N
        jPanel1.add(LIB_NOTIF, new org.netbeans.lib.awtextra.AbsoluteConstraints(1066, 26, -1, -1));

        LIB_SETTING.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ADM/ADMIN_SETTING.png"))); // NOI18N
        jPanel1.add(LIB_SETTING, new org.netbeans.lib.awtextra.AbsoluteConstraints(1121, 26, -1, -1));

        jP_LIB_DASHBOARD.setBackground(new java.awt.Color(255, 254, 252));
        jP_LIB_DASHBOARD.setMaximumSize(new java.awt.Dimension(980, 700));
        jP_LIB_DASHBOARD.setMinimumSize(new java.awt.Dimension(980, 700));
        jP_LIB_DASHBOARD.setOpaque(false);
        jP_LIB_DASHBOARD.setPreferredSize(new java.awt.Dimension(980, 700));
        jP_LIB_DASHBOARD.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LIB_NUMBER_RETURNED_BOOK.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        LIB_NUMBER_RETURNED_BOOK.setText("0");
        jP_LIB_DASHBOARD.add(LIB_NUMBER_RETURNED_BOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, -1, -1));

        LIB_NUMBER_ISSUED_BOOK.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        LIB_NUMBER_ISSUED_BOOK.setText("0");
        jP_LIB_DASHBOARD.add(LIB_NUMBER_ISSUED_BOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 530, -1, -1));

        LIB_NUMBER_AVAIL_BOOK.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        LIB_NUMBER_AVAIL_BOOK.setText("0");
        jP_LIB_DASHBOARD.add(LIB_NUMBER_AVAIL_BOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 530, -1, -1));

        LIB_DATE_TIME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_DATE_TIME.png"))); // NOI18N
        jP_LIB_DASHBOARD.add(LIB_DATE_TIME, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 163, -1, -1));

        LIB_BOOKS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_BOOKS.png"))); // NOI18N
        LIB_BOOKS.setText("jLabel3");
        jP_LIB_DASHBOARD.add(LIB_BOOKS, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 430, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        jP_LIB_DASHBOARD.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 520, 210));

        LIB_BACKGROUND_LAYOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD_FRAME.png"))); // NOI18N
        jP_LIB_DASHBOARD.add(LIB_BACKGROUND_LAYOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.add(jP_LIB_DASHBOARD, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 0, -1, 690));

        jP_LIB_ADDBOOK.setBackground(new java.awt.Color(255, 254, 252));
        jP_LIB_ADDBOOK.setMaximumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ADDBOOK.setMinimumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ADDBOOK.setOpaque(false);
        jP_LIB_ADDBOOK.setPreferredSize(new java.awt.Dimension(980, 700));
        jP_LIB_ADDBOOK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 254, 252));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 148, 192)));
        jScrollPane1.setFocusable(false);

        LIB_ADD_TABLE.setBackground(new java.awt.Color(255, 254, 252));
        LIB_ADD_TABLE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 231, 255)));
        LIB_ADD_TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        LIB_ADD_TABLE.setFocusable(false);
        LIB_ADD_TABLE.setGridColor(new java.awt.Color(114, 148, 192));
        LIB_ADD_TABLE.setRequestFocusEnabled(false);
        LIB_ADD_TABLE.setSelectionBackground(new java.awt.Color(114, 148, 192));
        LIB_ADD_TABLE.setSelectionForeground(new java.awt.Color(202, 231, 255));
        jScrollPane1.setViewportView(LIB_ADD_TABLE);

        jP_LIB_ADDBOOK.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 210, 662, 160));

        LIB_BOOK_TITLE.setBackground(new java.awt.Color(248, 243, 232));
        LIB_BOOK_TITLE.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_BOOK_TITLE.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_BOOK_TITLE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        LIB_BOOK_TITLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_BOOK_TITLEActionPerformed(evt);
            }
        });
        jP_LIB_ADDBOOK.add(LIB_BOOK_TITLE, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 409, 245, 30));

        LIB_BOOK_AUTHOR.setBackground(new java.awt.Color(248, 243, 232));
        LIB_BOOK_AUTHOR.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_BOOK_AUTHOR.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_BOOK_AUTHOR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ADDBOOK.add(LIB_BOOK_AUTHOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 470, 245, 30));

        LIB_BOOK_GENRE.setBackground(new java.awt.Color(248, 243, 232));
        LIB_BOOK_GENRE.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_BOOK_GENRE.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_BOOK_GENRE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ADDBOOK.add(LIB_BOOK_GENRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 531, 245, 30));

        LIB_DATE_PUB.setBackground(new java.awt.Color(248, 243, 232));
        LIB_DATE_PUB.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_DATE_PUB.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_DATE_PUB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ADDBOOK.add(LIB_DATE_PUB, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 409, 245, 30));

        LIB_ISBN.setBackground(new java.awt.Color(248, 243, 232));
        LIB_ISBN.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_ISBN.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_ISBN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ADDBOOK.add(LIB_ISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 470, 245, 30));

        AB_ADD.setBackground(new java.awt.Color(202, 231, 255));
        AB_ADD.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        AB_ADD.setForeground(new java.awt.Color(114, 148, 192));
        AB_ADD.setText("ADD");
        AB_ADD.setBorder(null);
        AB_ADD.setFocusPainted(false);
        AB_ADD.setFocusable(false);
        AB_ADD.setRequestFocusEnabled(false);
        AB_ADD.setRolloverEnabled(false);
        AB_ADD.setVerifyInputWhenFocusTarget(false);
        AB_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AB_ADDActionPerformed(evt);
            }
        });
        jP_LIB_ADDBOOK.add(AB_ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 600, 130, 30));

        AB_UPDATE.setBackground(new java.awt.Color(202, 231, 255));
        AB_UPDATE.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        AB_UPDATE.setForeground(new java.awt.Color(114, 148, 192));
        AB_UPDATE.setText("UPDATE");
        AB_UPDATE.setBorder(null);
        AB_UPDATE.setFocusPainted(false);
        AB_UPDATE.setFocusable(false);
        AB_UPDATE.setRequestFocusEnabled(false);
        AB_UPDATE.setRolloverEnabled(false);
        AB_UPDATE.setVerifyInputWhenFocusTarget(false);
        AB_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AB_UPDATEActionPerformed(evt);
            }
        });
        jP_LIB_ADDBOOK.add(AB_UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 603, 130, 30));

        AB_CLEAR.setBackground(new java.awt.Color(202, 231, 255));
        AB_CLEAR.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        AB_CLEAR.setForeground(new java.awt.Color(114, 148, 192));
        AB_CLEAR.setText("CLEAR");
        AB_CLEAR.setBorder(null);
        AB_CLEAR.setFocusPainted(false);
        AB_CLEAR.setFocusable(false);
        AB_CLEAR.setRequestFocusEnabled(false);
        AB_CLEAR.setRolloverEnabled(false);
        AB_CLEAR.setVerifyInputWhenFocusTarget(false);
        AB_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AB_CLEARActionPerformed(evt);
            }
        });
        jP_LIB_ADDBOOK.add(AB_CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 603, 130, 30));

        AB_DELETE.setBackground(new java.awt.Color(114, 148, 192));
        AB_DELETE.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        AB_DELETE.setForeground(new java.awt.Color(202, 231, 255));
        AB_DELETE.setText("DELETE");
        AB_DELETE.setBorder(null);
        AB_DELETE.setFocusPainted(false);
        AB_DELETE.setFocusable(false);
        AB_DELETE.setRequestFocusEnabled(false);
        AB_DELETE.setRolloverEnabled(false);
        AB_DELETE.setVerifyInputWhenFocusTarget(false);
        AB_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AB_DELETEActionPerformed(evt);
            }
        });
        jP_LIB_ADDBOOK.add(AB_DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(791, 603, 130, 30));

        ADDBOOK_MANAGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_MANAGE_BOOK.png"))); // NOI18N
        jP_LIB_ADDBOOK.add(ADDBOOK_MANAGE, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 28, -1, -1));

        LIB_ADD_BOOK_LAYOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK_FRAME.png"))); // NOI18N
        jP_LIB_ADDBOOK.add(LIB_ADD_BOOK_LAYOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 125, -1, -1));

        jPanel1.add(jP_LIB_ADDBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 0, -1, -1));

        jP_LIB_ISSUEBOOK.setBackground(new java.awt.Color(255, 254, 252));
        jP_LIB_ISSUEBOOK.setMaximumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ISSUEBOOK.setMinimumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ISSUEBOOK.setOpaque(false);
        jP_LIB_ISSUEBOOK.setPreferredSize(new java.awt.Dimension(980, 700));
        jP_LIB_ISSUEBOOK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBackground(new java.awt.Color(255, 254, 252));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 148, 192)));
        jScrollPane2.setFocusable(false);

        LIB_ISSUE_TABLE.setBackground(new java.awt.Color(255, 254, 252));
        LIB_ISSUE_TABLE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 231, 255)));
        LIB_ISSUE_TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        LIB_ISSUE_TABLE.setFocusable(false);
        LIB_ISSUE_TABLE.setGridColor(new java.awt.Color(114, 148, 192));
        LIB_ISSUE_TABLE.setRequestFocusEnabled(false);
        LIB_ISSUE_TABLE.setSelectionBackground(new java.awt.Color(114, 148, 192));
        LIB_ISSUE_TABLE.setSelectionForeground(new java.awt.Color(202, 231, 255));
        jScrollPane2.setViewportView(LIB_ISSUE_TABLE);

        jP_LIB_ISSUEBOOK.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 210, 662, 160));

        LIB_IB_ISBN.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_ISBN.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_ISBN.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_IB_ISBN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ISSUEBOOK.add(LIB_IB_ISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 405, 220, 25));

        LIB_IB_PHONENUM.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_PHONENUM.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_PHONENUM.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_IB_PHONENUM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ISSUEBOOK.add(LIB_IB_PHONENUM, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 509, 220, 25));

        LIB_IB_NAME.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_NAME.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_NAME.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_IB_NAME.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        LIB_IB_NAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_IB_NAMEActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_IB_NAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 457, 220, 25));

        LIB_EMAILADD.setBackground(new java.awt.Color(248, 243, 232));
        LIB_EMAILADD.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_EMAILADD.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_EMAILADD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        LIB_EMAILADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_EMAILADDActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_EMAILADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 561, 220, 25));

        LIB_ISSUEID.setBackground(new java.awt.Color(248, 243, 232));
        LIB_ISSUEID.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_ISSUEID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_ISSUEID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ISSUEBOOK.add(LIB_ISSUEID, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 405, 220, 25));

        LIB_IB_ISSUEDATE.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_ISSUEDATE.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_ISSUEDATE.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_IB_ISSUEDATE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ISSUEBOOK.add(LIB_IB_ISSUEDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 457, 220, 25));

        LIB_IB_RETURN.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_RETURN.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_RETURN.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_IB_RETURN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_ISSUEBOOK.add(LIB_IB_RETURN, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 509, 220, 25));

        LIB_IB_COMBO.setBackground(new java.awt.Color(248, 243, 232));
        LIB_IB_COMBO.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_IB_COMBO.setForeground(new java.awt.Color(114, 148, 192));
        LIB_IB_COMBO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AVAILABLE", "NOT AVAILABLE", "OVERDUE", "MISSING" }));
        LIB_IB_COMBO.setBorder(null);
        LIB_IB_COMBO.setFocusable(false);
        jP_LIB_ISSUEBOOK.add(LIB_IB_COMBO, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 561, 219, 25));

        LIB_IB_ADD.setBackground(new java.awt.Color(202, 231, 255));
        LIB_IB_ADD.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_IB_ADD.setForeground(new java.awt.Color(114, 148, 192));
        LIB_IB_ADD.setText("ADD");
        LIB_IB_ADD.setBorder(null);
        LIB_IB_ADD.setFocusPainted(false);
        LIB_IB_ADD.setFocusable(false);
        LIB_IB_ADD.setRequestFocusEnabled(false);
        LIB_IB_ADD.setRolloverEnabled(false);
        LIB_IB_ADD.setVerifyInputWhenFocusTarget(false);
        LIB_IB_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_IB_ADDActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_IB_ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 618, 130, 30));

        LIB_IB_UPDATE.setBackground(new java.awt.Color(202, 231, 255));
        LIB_IB_UPDATE.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_IB_UPDATE.setForeground(new java.awt.Color(114, 148, 192));
        LIB_IB_UPDATE.setText("UPDATE");
        LIB_IB_UPDATE.setBorder(null);
        LIB_IB_UPDATE.setFocusPainted(false);
        LIB_IB_UPDATE.setFocusable(false);
        LIB_IB_UPDATE.setRequestFocusEnabled(false);
        LIB_IB_UPDATE.setRolloverEnabled(false);
        LIB_IB_UPDATE.setVerifyInputWhenFocusTarget(false);
        LIB_IB_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_IB_UPDATEActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_IB_UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 618, 130, 30));

        LIB_IB_CLEAR.setBackground(new java.awt.Color(202, 231, 255));
        LIB_IB_CLEAR.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_IB_CLEAR.setForeground(new java.awt.Color(114, 148, 192));
        LIB_IB_CLEAR.setText("CLEAR");
        LIB_IB_CLEAR.setBorder(null);
        LIB_IB_CLEAR.setFocusPainted(false);
        LIB_IB_CLEAR.setFocusable(false);
        LIB_IB_CLEAR.setRequestFocusEnabled(false);
        LIB_IB_CLEAR.setRolloverEnabled(false);
        LIB_IB_CLEAR.setVerifyInputWhenFocusTarget(false);
        LIB_IB_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_IB_CLEARActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_IB_CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 618, 130, 30));

        LIB_IB_DELETE.setBackground(new java.awt.Color(114, 148, 192));
        LIB_IB_DELETE.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_IB_DELETE.setForeground(new java.awt.Color(202, 231, 255));
        LIB_IB_DELETE.setText("DELETE");
        LIB_IB_DELETE.setBorder(null);
        LIB_IB_DELETE.setFocusPainted(false);
        LIB_IB_DELETE.setFocusable(false);
        LIB_IB_DELETE.setRequestFocusEnabled(false);
        LIB_IB_DELETE.setRolloverEnabled(false);
        LIB_IB_DELETE.setVerifyInputWhenFocusTarget(false);
        LIB_IB_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_IB_DELETEActionPerformed(evt);
            }
        });
        jP_LIB_ISSUEBOOK.add(LIB_IB_DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(791, 618, 130, 30));

        ISSUEBOOK_MANAGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_MANAGE_BOOK.png"))); // NOI18N
        jP_LIB_ISSUEBOOK.add(ISSUEBOOK_MANAGE, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 28, -1, -1));

        LIB_IB_LAYOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK_FRAME.png"))); // NOI18N
        jP_LIB_ISSUEBOOK.add(LIB_IB_LAYOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 125, -1, -1));

        jPanel1.add(jP_LIB_ISSUEBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 0, -1, -1));

        jP_LIB_RETURNBOOK.setBackground(new java.awt.Color(255, 254, 252));
        jP_LIB_RETURNBOOK.setMaximumSize(new java.awt.Dimension(980, 700));
        jP_LIB_RETURNBOOK.setMinimumSize(new java.awt.Dimension(980, 700));
        jP_LIB_RETURNBOOK.setOpaque(false);
        jP_LIB_RETURNBOOK.setPreferredSize(new java.awt.Dimension(980, 700));
        jP_LIB_RETURNBOOK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 254, 252));
        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 148, 192)));
        jScrollPane3.setFocusable(false);

        LIB_RETURN_TABLE.setBackground(new java.awt.Color(255, 254, 252));
        LIB_RETURN_TABLE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 231, 255)));
        LIB_RETURN_TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        LIB_RETURN_TABLE.setFocusable(false);
        LIB_RETURN_TABLE.setGridColor(new java.awt.Color(114, 148, 192));
        LIB_RETURN_TABLE.setRequestFocusEnabled(false);
        LIB_RETURN_TABLE.setSelectionBackground(new java.awt.Color(114, 148, 192));
        LIB_RETURN_TABLE.setSelectionForeground(new java.awt.Color(202, 231, 255));
        jScrollPane3.setViewportView(LIB_RETURN_TABLE);

        jP_LIB_RETURNBOOK.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 210, 662, 160));

        LIB_RB_ISSUEID.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_ISSUEID.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_ISSUEID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_ISSUEID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_ISSUEID, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 405, 220, 25));

        LIB_RB_RETURNDATE.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_RETURNDATE.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_RETURNDATE.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_RETURNDATE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_RETURNDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 509, 220, 25));

        LIB_RB_ISSUEDATAE.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_ISSUEDATAE.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_ISSUEDATAE.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_ISSUEDATAE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_ISSUEDATAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 457, 220, 25));

        LIB_RB_ISBN.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_ISBN.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_ISBN.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_ISBN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_ISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 561, 220, 25));

        LIB_RB_NAME.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_NAME.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_NAME.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_NAME.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_NAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 405, 220, 25));

        LIB_RB_PHONENUM.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_PHONENUM.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_PHONENUM.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_PHONENUM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_PHONENUM, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 457, 220, 25));

        LIB_RB_BOOKSTATUS.setBackground(new java.awt.Color(248, 243, 232));
        LIB_RB_BOOKSTATUS.setFont(new java.awt.Font("Candara Light", 1, 12)); // NOI18N
        LIB_RB_BOOKSTATUS.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LIB_RB_BOOKSTATUS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(55, 103, 166)));
        jP_LIB_RETURNBOOK.add(LIB_RB_BOOKSTATUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 509, 220, 25));

        LIB_RB_RETURN.setBackground(new java.awt.Color(202, 231, 255));
        LIB_RB_RETURN.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_RB_RETURN.setForeground(new java.awt.Color(114, 148, 192));
        LIB_RB_RETURN.setText("CREATE");
        LIB_RB_RETURN.setBorder(null);
        LIB_RB_RETURN.setFocusPainted(false);
        LIB_RB_RETURN.setFocusable(false);
        LIB_RB_RETURN.setRequestFocusEnabled(false);
        LIB_RB_RETURN.setRolloverEnabled(false);
        LIB_RB_RETURN.setVerifyInputWhenFocusTarget(false);
        LIB_RB_RETURN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_RB_RETURNActionPerformed(evt);
            }
        });
        jP_LIB_RETURNBOOK.add(LIB_RB_RETURN, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 618, 130, 30));

        LIB_RB_CLEAR.setBackground(new java.awt.Color(202, 231, 255));
        LIB_RB_CLEAR.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 14)); // NOI18N
        LIB_RB_CLEAR.setForeground(new java.awt.Color(114, 148, 192));
        LIB_RB_CLEAR.setText("CLEAR");
        LIB_RB_CLEAR.setBorder(null);
        LIB_RB_CLEAR.setFocusPainted(false);
        LIB_RB_CLEAR.setFocusable(false);
        LIB_RB_CLEAR.setRequestFocusEnabled(false);
        LIB_RB_CLEAR.setRolloverEnabled(false);
        LIB_RB_CLEAR.setVerifyInputWhenFocusTarget(false);
        LIB_RB_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LIB_RB_CLEARActionPerformed(evt);
            }
        });
        jP_LIB_RETURNBOOK.add(LIB_RB_CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(632, 618, 130, 30));

        RETURNBOOK_MANAGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_MANAGE_BOOK.png"))); // NOI18N
        jP_LIB_RETURNBOOK.add(RETURNBOOK_MANAGE, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 28, -1, -1));

        LIB_RB_LAYOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK_FRAME.png"))); // NOI18N
        jP_LIB_RETURNBOOK.add(LIB_RB_LAYOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 125, -1, -1));

        jPanel1.add(jP_LIB_RETURNBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 0, -1, -1));

        jP_LIB_ACCOUNT.setBackground(new java.awt.Color(255, 254, 252));
        jP_LIB_ACCOUNT.setMaximumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ACCOUNT.setMinimumSize(new java.awt.Dimension(980, 700));
        jP_LIB_ACCOUNT.setPreferredSize(new java.awt.Dimension(980, 700));
        jP_LIB_ACCOUNT.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LIB_EDIT_BUTTON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_EDIT_BUTTON.png"))); // NOI18N
        jP_LIB_ACCOUNT.add(LIB_EDIT_BUTTON, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 441, -1, -1));

        LIB_ACCOUNT_LAYOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT_FRAME.png"))); // NOI18N
        jP_LIB_ACCOUNT.add(LIB_ACCOUNT_LAYOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.add(jP_LIB_ACCOUNT, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 0, -1, -1));

        LIB_DASHBOARD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD_ACTIVE.png"))); // NOI18N
        LIB_DASHBOARD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_DASHBOARDMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_DASHBOARD, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 97, -1, -1));

        LIB_ADDBOOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK.png"))); // NOI18N
        LIB_ADDBOOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_ADDBOOKMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_ADDBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 163, -1, -1));

        LIB_ISSUEBOOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK.png"))); // NOI18N
        LIB_ISSUEBOOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_ISSUEBOOKMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_ISSUEBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 229, -1, -1));

        LIB_RETURNBOOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK.png"))); // NOI18N
        LIB_RETURNBOOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_RETURNBOOKMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_RETURNBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 295, -1, -1));

        LIB_ACCOUNT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT.png"))); // NOI18N
        LIB_ACCOUNT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_ACCOUNTMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_ACCOUNT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 361, -1, -1));

        LIB_LOGOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_LOG_OUT.png"))); // NOI18N
        LIB_LOGOUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LIB_LOGOUTMouseClicked(evt);
            }
        });
        jPanel1.add(LIB_LOGOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 616, -1, -1));

        LIB_DIVIDER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/LIB_DIVIDER.png"))); // NOI18N
        jPanel1.add(LIB_DIVIDER, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LIB_LOGOUTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_LOGOUTMouseClicked
        int response = JOptionPane.showConfirmDialog(
        this,
        "Are you sure you want to logout?",
        "Confirm Logout",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE
        );

        if (response == JOptionPane.YES_OPTION) {
            MAIN main = new MAIN();
            main.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_LIB_LOGOUTMouseClicked

    private void LIB_DASHBOARDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_DASHBOARDMouseClicked
        jP_LIB_DASHBOARD.setVisible(true);
        jP_LIB_ADDBOOK.setVisible(false);
        jP_LIB_ISSUEBOOK.setVisible(false);
        jP_LIB_RETURNBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(false);

        LIB_DASHBOARD.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD_ACTIVE.png")));
        LIB_ADDBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK.png")));
        LIB_ISSUEBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK.png")));
        LIB_RETURNBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK.png")));
        LIB_ACCOUNT.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT.png")));
    }//GEN-LAST:event_LIB_DASHBOARDMouseClicked

    private void LIB_ADDBOOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_ADDBOOKMouseClicked
        jP_LIB_ADDBOOK.setVisible(true);
        jP_LIB_DASHBOARD.setVisible(false);
        jP_LIB_ISSUEBOOK.setVisible(false);
        jP_LIB_RETURNBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(false);

        LIB_DASHBOARD.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD.png")));
        LIB_ADDBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK_ACTIVE.png")));
        LIB_ISSUEBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK.png")));
        LIB_RETURNBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK.png")));
        LIB_ACCOUNT.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT.png")));
    }//GEN-LAST:event_LIB_ADDBOOKMouseClicked

    private void LIB_ISSUEBOOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_ISSUEBOOKMouseClicked
        jP_LIB_ISSUEBOOK.setVisible(true);
        jP_LIB_DASHBOARD.setVisible(false);
        jP_LIB_ADDBOOK.setVisible(false);
        jP_LIB_RETURNBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(false);


        LIB_DASHBOARD.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD.png")));
        LIB_ADDBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK.png")));
        LIB_ISSUEBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK_ACTIVE.png")));
        LIB_RETURNBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK.png")));
        LIB_ACCOUNT.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT.png")));
    }//GEN-LAST:event_LIB_ISSUEBOOKMouseClicked

    private void LIB_RETURNBOOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_RETURNBOOKMouseClicked
        jP_LIB_RETURNBOOK.setVisible(true);
        jP_LIB_DASHBOARD.setVisible(false);
        jP_LIB_ADDBOOK.setVisible(false);
        jP_LIB_ISSUEBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(false);

        LIB_DASHBOARD.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD.png")));
        LIB_ADDBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK.png")));
        LIB_ISSUEBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK.png")));
        LIB_RETURNBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK_ACTIVE.png")));
        LIB_ACCOUNT.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT.png")));
    }//GEN-LAST:event_LIB_RETURNBOOKMouseClicked

    private void LIB_ACCOUNTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIB_ACCOUNTMouseClicked
        jP_LIB_RETURNBOOK.setVisible(false);
        jP_LIB_DASHBOARD.setVisible(false);
        jP_LIB_ADDBOOK.setVisible(false);
        jP_LIB_ISSUEBOOK.setVisible(false);
        jP_LIB_ACCOUNT.setVisible(true);

        LIB_DASHBOARD.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_DASHBOARD.png")));
        LIB_ADDBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ADD_BOOK.png")));
        LIB_ISSUEBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ISSUE_BOOK.png")));
        LIB_RETURNBOOK.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_RETURN_BOOK.png")));
        LIB_ACCOUNT.setIcon(new ImageIcon(getClass().getResource("/LIB/LIB_ACCOUNT_ACTIVE.png")));
    }//GEN-LAST:event_LIB_ACCOUNTMouseClicked

    private void LIB_BOOK_TITLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_BOOK_TITLEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LIB_BOOK_TITLEActionPerformed

    // This will edit the book
    private void AB_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AB_UPDATEActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        int selectedRow = LIB_ADD_TABLE.getSelectedRow();

        if (selectedRow != -1) {
            // Retrieve current book details from the table
            String bookID = bookModel.getValueAt(selectedRow, 0).toString();
            String bookTitle = bookModel.getValueAt(selectedRow, 1).toString();
            String bookAuthor = bookModel.getValueAt(selectedRow, 2).toString();
            String bookGenre = bookModel.getValueAt(selectedRow, 3).toString();
            String bookDate = bookModel.getValueAt(selectedRow, 4).toString();
            String bookISBN = bookModel.getValueAt(selectedRow, 5).toString();

            // Create input fields
            JTextField bookTitleField = new JTextField(bookTitle);
            JTextField bookAuthorField = new JTextField(bookAuthor);
            JTextField bookISBNField = new JTextField(bookISBN);
            JTextField bookGenreField = new JTextField(bookGenre);
            JTextField bookDateField = new JTextField(bookDate);

            // Create a panel to hold the input fields
            JPanel panel = new JPanel(new GridLayout(5, 2, 5, 5));
            panel.add(new JLabel("Book Title:"));
            panel.add(bookTitleField);
            panel.add(new JLabel("Book Author:"));
            panel.add(bookAuthorField);
            panel.add(new JLabel("ISBN:"));
            panel.add(bookISBNField);
            panel.add(new JLabel("Book Genre:"));
            panel.add(bookGenreField);
            panel.add(new JLabel("Date Published:"));
            panel.add(bookDateField);

            // Show the dialog
            int result = JOptionPane.showConfirmDialog(
                    this, panel, "Edit Book Details", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE
            );

            if (result == JOptionPane.OK_OPTION) {
                // Retrieve updated values
                String updatedBookTitle = bookTitleField.getText();
                String updatedBookAuthor = bookAuthorField.getText();
                String updatedBookISBN = bookISBNField.getText();
                String updatedBookGenre = bookGenreField.getText();
                String updatedBookDate = bookDateField.getText();

                // Create a map for the updated data
                Map<String, String> bookData = new HashMap<>();
                bookData.put("book_title", updatedBookTitle);
                bookData.put("book_author", updatedBookAuthor);
                bookData.put("isbn", updatedBookISBN);
                bookData.put("book_genre", updatedBookGenre);
                bookData.put("date_published", updatedBookDate);
                // Update the book in the database
                BookDatabase.getInstance().updateBook(bookID, bookData);
                // Reload the book table
                LoadBook();
                InitializeDashboard();
            } else {
                JOptionPane.showMessageDialog(this, "Please select a book to edit.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AB_UPDATEActionPerformed

    // This will add the books
    private void AB_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AB_ADDActionPerformed
        // TODO add your handling code here:
        String bookTitle = LIB_BOOK_TITLE.getText();
        String bookAuthor =  LIB_BOOK_AUTHOR.getText();
        String bookISBN =  LIB_ISBN.getText();
        String bookGenre = LIB_BOOK_GENRE.getText();
        String bookDate =  LIB_DATE_PUB.getText();
        if (bookTitle.isEmpty() || bookAuthor.isEmpty() || bookISBN.isEmpty() || bookGenre.isEmpty() || bookDate.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Map<String, String> bookData = new HashMap<>();
            bookData.put("book_title", bookTitle);
            bookData.put("book_author", bookAuthor);
            bookData.put("isbn", bookISBN);
            bookData.put("book_genre", bookGenre);
            bookData.put("date_published", bookDate);

            BookDatabase.getInstance().insertBook(bookData);
            LIB_BOOK_TITLE.setText("");
            LIB_BOOK_AUTHOR.setText("");
            LIB_ISBN.setText("");
            LIB_BOOK_GENRE.setText("");
            LIB_DATE_PUB.setText("");
            LoadBook();
            InitializeDashboard();

        }
    }//GEN-LAST:event_AB_ADDActionPerformed

    // This will clear the books
    private void AB_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AB_CLEARActionPerformed
        // TODO add your handling code here:
        LIB_BOOK_TITLE.setText("");
        LIB_BOOK_AUTHOR.setText("");
        LIB_ISBN.setText("");
        LIB_BOOK_GENRE.setText("");
        LIB_DATE_PUB.setText("");
    }//GEN-LAST:event_AB_CLEARActionPerformed

    // This will delete the book
    private void AB_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AB_DELETEActionPerformed
        // TODO add your handling code here:
        int selectedRow = LIB_ADD_TABLE.getSelectedRow();

        if (selectedRow != -1) {
            String bookID =bookModel.getValueAt(selectedRow, 0).toString();
            // Remove the selected book from the database
            BookDatabase.getInstance().deleteBook(bookID);
            LoadBook();
            InitializeDashboard();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a book to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AB_DELETEActionPerformed

    // This will add the issue books
    private void LIB_IB_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_IB_ADDActionPerformed
        // TODO add your handling code here:
        String isbn = LIB_IB_ISBN.getText();
        String name = LIB_IB_NAME.getText();
        String phone = LIB_IB_PHONENUM.getText();
        String email = LIB_EMAILADD.getText();
        String issueID =  LIB_ISSUEID.getText();
        String issueDate =  LIB_IB_ISSUEDATE.getText();
        String returnDate =  LIB_IB_RETURN.getText();
        String status =  LIB_IB_COMBO.getSelectedItem().toString();

        if  (isbn.isEmpty() || name.isEmpty() || phone.isEmpty() || email.isEmpty() || issueID.isEmpty() || issueDate.isEmpty() || returnDate.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        else {
            Map<String, String> issueData = new HashMap<>();
            issueData.put("isbn", isbn);
            issueData.put("name", name);
            issueData.put("phone_number", phone);
            issueData.put("email_address", email);
            issueData.put("issue_id", issueID);
            issueData.put("issue_date", issueDate);
            issueData.put("return_date", returnDate);
            issueData.put("status", status);

            IssueBookDatabase.getInstance().insertIssueBook(issueData);
            LIB_IB_ISBN.setText("");
            LIB_IB_NAME.setText("");
            LIB_IB_PHONENUM.setText("");
            LIB_EMAILADD.setText("");
            LIB_ISSUEID.setText("");
            LIB_IB_ISSUEDATE.setText("");
            LIB_IB_RETURN.setText("");

            LoadIssueBook();
            InitializeDashboard();

        }
    }//GEN-LAST:event_LIB_IB_ADDActionPerformed

    // This will update the issue book
    private void LIB_IB_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_IB_UPDATEActionPerformed
        // TODO add your handling code here:

        int selectedRow = LIB_ISSUE_TABLE.getSelectedRow();

        if (selectedRow != -1) {
            // Retrieve current issue book details from the table
            String issueID = issueModel.getValueAt(selectedRow, 0).toString();
            String issueDate = issueModel.getValueAt(selectedRow, 1).toString();
            String returnDate = issueModel.getValueAt(selectedRow, 2).toString();
            String name = issueModel.getValueAt(selectedRow, 3).toString();
            String isbn = issueModel.getValueAt(selectedRow, 4).toString();
            String phoneNumber = issueModel.getValueAt(selectedRow, 5).toString();
            String emailAddress = issueModel.getValueAt(selectedRow, 6).toString();
            String status = issueModel.getValueAt(selectedRow, 7).toString();

            // Create input fields
            JTextField issueDateField = new JTextField(issueDate);
            JTextField returnDateField = new JTextField(returnDate);
            JTextField nameField = new JTextField(name);
            JTextField isbnField = new JTextField(isbn);
            JTextField phoneNumberField = new JTextField(phoneNumber);
            JTextField emailAddressField = new JTextField(emailAddress);
            JComboBox<String> statusComboBox = new JComboBox<>(new String[]{"AVAILABLE", "NOT AVAILABLE", "OVERDUE", "MISSING"});
            statusComboBox.setSelectedItem(status);

            // Create a panel to hold the input fields
            JPanel panel = new JPanel(new GridLayout(8, 2, 5, 5));
            panel.add(new JLabel("Issue ID:"));
            panel.add(new JLabel(issueID));
            panel.add(new JLabel("Issue Date:"));
            panel.add(issueDateField);
            panel.add(new JLabel("Return Date:"));
            panel.add(returnDateField);
            panel.add(new JLabel("Name:"));
            panel.add(nameField);
            panel.add(new JLabel("ISBN:"));
            panel.add(isbnField);
            panel.add(new JLabel("Phone Number:"));
            panel.add(phoneNumberField);
            panel.add(new JLabel("Email Address:"));
            panel.add(emailAddressField);
            panel.add(new JLabel("Status:"));
            panel.add(statusComboBox);


            // Show the dialog
            int result = JOptionPane.showConfirmDialog(
                    this, panel, "Edit Issue Book Details", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE
            );

            if (result == JOptionPane.OK_OPTION) {
                // Retrieve updated values
                String updatedIssueDate = issueDateField.getText();
                String updatedReturnDate = returnDateField.getText();
                String updatedName = nameField.getText();
                String updatedIsbn = isbnField.getText();
                String updatedPhoneNumber = phoneNumberField.getText();
                String updatedEmailAddress = emailAddressField.getText();
                String updatedStatus = statusComboBox.getSelectedItem().toString();

                // Create a map for the updated data
                Map<String, String> issueData = new HashMap<>();
                issueData.put("issue_date", updatedIssueDate);
                issueData.put("return_date", updatedReturnDate);
                issueData.put("name", updatedName);
                issueData.put("isbn", updatedIsbn);
                issueData.put("phone_number", updatedPhoneNumber);
                issueData.put("email_address", updatedEmailAddress);
                issueData.put("status", updatedStatus);

                // Update the issue book in the database
                IssueBookDatabase.getInstance().updateIssueBook(issueID, issueData);

                // Reload the issue book table
                LoadIssueBook();
                InitializeDashboard();
            } else {
                JOptionPane.showMessageDialog(this, "Please select an issue book to edit.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_LIB_IB_UPDATEActionPerformed

    // This will clear the issue book
    private void LIB_IB_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_IB_CLEARActionPerformed
        // TODO add your handling code here:
        LIB_IB_ISBN.setText("");
        LIB_IB_NAME.setText("");
        LIB_IB_PHONENUM.setText("");
        LIB_EMAILADD.setText("");
        LIB_ISSUEID.setText("");
        LIB_IB_ISSUEDATE.setText("");
        LIB_IB_RETURN.setText("");
    }//GEN-LAST:event_LIB_IB_CLEARActionPerformed

    // This will delete the issue book
    private void LIB_IB_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_IB_DELETEActionPerformed
        // TODO add your handling code here:

        int selectedRow = LIB_ISSUE_TABLE.getSelectedRow();

        if (selectedRow != -1) {
            String issueID = issueModel.getValueAt(selectedRow, 0).toString();
            // Remove the selected issue book from the database
            IssueBookDatabase.getInstance().deleteIssueBook(issueID);
            LoadIssueBook();
            InitializeDashboard();
        } else {
            JOptionPane.showMessageDialog(this, "Please select an issue book to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_LIB_IB_DELETEActionPerformed

    // This will add the return books
    private void LIB_RB_RETURNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_RB_RETURNActionPerformed
        // TODO add your handling code here:
        String issueID = LIB_RB_ISSUEID.getText();
        String issueDate = LIB_RB_ISSUEDATAE.getText();
        String returnDate = LIB_RB_RETURNDATE.getText();
        String name = LIB_RB_NAME.getText();
        String isbn = LIB_RB_ISBN.getText();
        String phone = LIB_RB_PHONENUM.getText();
        String status = LIB_RB_BOOKSTATUS.getText();
        if (issueID.isEmpty() || issueDate.isEmpty() || returnDate.isEmpty() || name.isEmpty() || isbn.isEmpty() || phone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Map<String, String> returnData = new HashMap<>();
            returnData.put("issue_id", issueID);
            returnData.put("issue_date", issueDate);
            returnData.put("return_date", returnDate);
            returnData.put("name", name);
            returnData.put("isbn", isbn);
            returnData.put("phone_number", phone);
            returnData.put("status", status);

            IssueBookDatabase.getInstance().insertIssueBook(returnData);
            LIB_RB_ISSUEID.setText("");
            LIB_RB_ISSUEDATAE.setText("");
            LIB_RB_RETURNDATE.setText("");
            LIB_RB_NAME.setText("");
            LIB_RB_ISBN.setText("");
            LIB_RB_PHONENUM.setText("");

            LoadReturnBook();
            InitializeDashboard();

        }
    }//GEN-LAST:event_LIB_RB_RETURNActionPerformed

    // This will clear the return books
    private void LIB_RB_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_RB_CLEARActionPerformed
        // TODO add your handling code here:
        LIB_RB_ISSUEID.setText("");
        LIB_RB_ISSUEDATAE.setText("");
        LIB_RB_RETURNDATE.setText("");
        LIB_RB_NAME.setText("");
        LIB_RB_ISBN.setText("");
        LIB_RB_PHONENUM.setText("");

    }//GEN-LAST:event_LIB_RB_CLEARActionPerformed

    private void LIB_IB_NAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_IB_NAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LIB_IB_NAMEActionPerformed

    private void LIB_EMAILADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LIB_EMAILADDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LIB_EMAILADDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LIBRARIAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LIBRARIAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LIBRARIAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LIBRARIAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LIBRARIAN().setVisible(true);
            }
        });
    }

    void LoadBookList() {
        bookListTableModel.setRowCount(0); // Clear existing rows
        bookModelList = BookDatabase.getInstance().getBooks();

        if (bookModelList != null) {
            for (BookModel book : bookModelList) {
                bookListTableModel.addRow(new Object[]{
                        book.getBook_id(),
                        book.getBook_title(),
                        book.getBook_author(),
                        book.getBook_genre(),
                        book.getIsbn(),
                        book.getStatus(),
                });
            }
        } else {
            System.out.println("No books found.");
        }
    }

    void LoadBook() {
        bookModel.setRowCount(0); // Clear existing rows
        bookList = BookDatabase.getInstance().getBooks();

        if (bookList != null) {
            for (BookModel book : bookList) {
                bookModel.addRow(new Object[]{
                        book.getBook_id(),
                        book.getBook_title(),
                        book.getBook_author(),
                        book.getBook_genre(),
                        book.getDate_published(),
                        book.getIsbn(),
                        book.getStatus(),
                });
            }
        } else {
            System.out.println("No books found.");
        }
    }

    void LoadIssueBook() {
        issueModel.setRowCount(0); // Clear existing rows
        issueBookModelList = IssueBookDatabase.getInstance().getIssueBook();

        if (issueBookModelList != null) {
            for (IssueBookModel issue : issueBookModelList) {
                issueModel.addRow(new Object[]{
                        issue.getIssue_id(),
                        issue.getIssue_date(),
                        issue.getReturn_date(),
                        issue.getName(),
                        issue.getIsbn(),
                        issue.getPhone_number(),
                        issue.getEmail_address(),
                        issue.getStatus()
                });
            }
        } else {
            System.out.println("No issued books found.");
        }
    }

    void LoadReturnBook() {
        model5.setRowCount(0); // Clear existing rows
        returnBookModelList = IssueBookDatabase.getInstance().getReturnBook();

        if (returnBookModelList != null) {
            for (IssueBookModel issue : returnBookModelList) {
                model5.addRow(new Object[]{
                        issue.getIssue_id(),
                        issue.getIssue_date(),
                        issue.getReturn_date(),
                        issue.getName(),
                        issue.getIsbn(),
                        issue.getPhone_number(),
                        issue.getStatus()
                });
            }
        } else {
            System.out.println("No issued books found.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AB_ADD;
    private javax.swing.JButton AB_CLEAR;
    private javax.swing.JButton AB_DELETE;
    private javax.swing.JButton AB_UPDATE;
    private javax.swing.JLabel ADDBOOK_MANAGE;
    private javax.swing.JLabel ISSUEBOOK_MANAGE;
    private javax.swing.JLabel LIB_ACCOUNT;
    private javax.swing.JLabel LIB_ACCOUNT_LAYOUT;
    private javax.swing.JLabel LIB_ADDBOOK;
    private javax.swing.JLabel LIB_ADD_BOOK_LAYOUT;
    private javax.swing.JTable LIB_ADD_TABLE;
    private javax.swing.JLabel LIB_BACKGROUND_LAYOUT;
    private javax.swing.JLabel LIB_BOOKS;
    private javax.swing.JTextField LIB_BOOK_AUTHOR;
    private javax.swing.JTextField LIB_BOOK_GENRE;
    private javax.swing.JTextField LIB_BOOK_TITLE;
    private javax.swing.JLabel LIB_DASHBOARD;
    private javax.swing.JTextField LIB_DATE_PUB;
    private javax.swing.JLabel LIB_DATE_TIME;
    private javax.swing.JLabel LIB_DIVIDER;
    private javax.swing.JLabel LIB_EDIT_BUTTON;
    private javax.swing.JTextField LIB_EMAILADD;
    private javax.swing.JButton LIB_IB_ADD;
    private javax.swing.JButton LIB_IB_CLEAR;
    private javax.swing.JComboBox<String> LIB_IB_COMBO;
    private javax.swing.JButton LIB_IB_DELETE;
    private javax.swing.JTextField LIB_IB_ISBN;
    private javax.swing.JTextField LIB_IB_ISSUEDATE;
    private javax.swing.JLabel LIB_IB_LAYOUT;
    private javax.swing.JTextField LIB_IB_NAME;
    private javax.swing.JTextField LIB_IB_PHONENUM;
    private javax.swing.JTextField LIB_IB_RETURN;
    private javax.swing.JButton LIB_IB_UPDATE;
    private javax.swing.JTextField LIB_ISBN;
    private javax.swing.JLabel LIB_ISSUEBOOK;
    private javax.swing.JTextField LIB_ISSUEID;
    private javax.swing.JTable LIB_ISSUE_TABLE;
    private javax.swing.JLabel LIB_LOGOUT;
    private javax.swing.JLabel LIB_NOTIF;
    private javax.swing.JLabel LIB_NUMBER_AVAIL_BOOK;
    private javax.swing.JLabel LIB_NUMBER_ISSUED_BOOK;
    private javax.swing.JLabel LIB_NUMBER_RETURNED_BOOK;
    private javax.swing.JTextField LIB_RB_BOOKSTATUS;
    private javax.swing.JButton LIB_RB_CLEAR;
    private javax.swing.JTextField LIB_RB_ISBN;
    private javax.swing.JTextField LIB_RB_ISSUEDATAE;
    private javax.swing.JTextField LIB_RB_ISSUEID;
    private javax.swing.JLabel LIB_RB_LAYOUT;
    private javax.swing.JTextField LIB_RB_NAME;
    private javax.swing.JTextField LIB_RB_PHONENUM;
    private javax.swing.JButton LIB_RB_RETURN;
    private javax.swing.JTextField LIB_RB_RETURNDATE;
    private javax.swing.JLabel LIB_RETURNBOOK;
    private javax.swing.JTable LIB_RETURN_TABLE;
    private javax.swing.JLabel LIB_SETTING;
    private javax.swing.JLabel RETURNBOOK_MANAGE;
    private javax.swing.JPanel jP_LIB_ACCOUNT;
    private javax.swing.JPanel jP_LIB_ADDBOOK;
    private javax.swing.JPanel jP_LIB_DASHBOARD;
    private javax.swing.JPanel jP_LIB_ISSUEBOOK;
    private javax.swing.JPanel jP_LIB_RETURNBOOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
